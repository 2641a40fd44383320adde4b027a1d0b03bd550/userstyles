/* ==UserStyle==
@name           YouTube
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus

@var text     thumbnail-size "Thumbnail size"            192px
@var checkbox thumbnail-info-hover "Video info on hover" 0
==/UserStyle== */

@keyframes dropfade {
	0% {
		opacity: 0;
		transform: translateY(-10px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

$small-screen = 768px
$select-size = 16px
$input-h = 28px
$i = !important

// Stylus
svar(var) {
	s('var(--%s)', var);
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr || n == -tr2 || n == -tr3) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl(n = ) {
	background-color: n ? s('var(--hl-%s)', n) : var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{pos ? s('padding-%s', pos) : 'padding'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

mar(pos =, n = 1) {
	{pos ? s('margin-%s', pos) : 'margin'}: \
		n == 0 ? 0 $i : pos == 0 ? 0 $i : var(--pad) $i;
}

brd(pos =, color = border, radius = false) {
	color = (typeof(color) == 'ident' || typeof(color) == 'string') ? \
		svar(color) : color

	{pos ? s('border-%s', pos) : 'border'}: \
		var(--border-width) solid color $i;

	if (radius || !pos) {
		border-radius: var(--border-radius) $i;
	}
}

shd(n) {
	box-shadow: s('var(--shadow-%s)', n) $i;
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

pos(offset = 0) {
	left: offset $i;
	top: offset $i;
	right: offset $i;
	bottom: offset $i;
}

center() {
	display: flex $i;
	align-items: center $i;
}

// etc.
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(.2, .9, .6, 1));
}

focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus(class = page-focus) {
	.{class} & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}

	// Chromuim is unable to recognise the selector
	@supports not (-moz-appearance: none) { :root:not(:-moz-window-inactive) {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--fg2: var(--accent-fg);
		--border: var(--accent-border);
	}}
}

replace-text(content =, text-color = fg, pos = after) {
	letter-spacing: -9999px $i;
	color: transparent $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

// Input normalisation
normalise-select() {
	appearance: none $i;
	bgc(2);
	line-height: var(--line-height) $i;
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 4px $i;
	padding: var(--pad) 20px var(--pad) var(--pad) $i;
	brd();
	focus();
}

normalise-input() {
	bgc(2);
	line-height: var(--line-height) $i;
	pad();
	brd();
	focus();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	line-height: var(--line-height) $i;
	background-image: none $i;
	padding: var(--pad) calc(var(--pad) * 2) $i;
	brd();
	cursor: pointer $i;
	focus();

	&:disabled {
		opacity: .5 $i;
		pointer-events: none $i;
	}
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();

	&::-webkit-color-swatch {
		border: none $i;
		border-radius: calc(var(--border-radius) * .33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			line-height: var(--line-height) $i;
			center();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	border-radius: calc(var(--border-radius) * .33) $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		pos();
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.33333333ms $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.33333333ms $i;
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.33333333ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		pos(3px);
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg3) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header(first = true) {
	fg();
	line-height: var(--line-height) $i;
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	pad(bottom);
	brd(bottom);
	mar(0);
	mar(bottom);
	if (!first) {
		margin-top: calc(var(--pad) * 2) $i;
	}
}

@-moz-document domain("youtube.com") {
	// Global
	:root {
		// Background
		--yt-spec-general-background-a: var(--bg);
		--yt-spec-general-background-b: var(--bg2);
		--yt-spec-general-background-c: var(--bg3);

		// Foreground
		--yt-spec-text-primary: var(--fg);
		--yt-spec-text-primary-inverse: var(--bg);
		--yt-spec-text-secondary: var(--fg2);
		--yt-spec-text-disabled: var(--fg2);

		settings = \
			'thumbnail-size'

		for i in settings {
			\-\-{i}: convert(i);
		}
	}
	ytd-watch-flexy {
		--ytd-watch-flexy-masthead-height: var(--header-h);
		--ytd-watch-flexy-sidebar-width: calc(var(--thumbnail-size) + var(--pad) * 2);
		--ytd-watch-flexy-sidebar-min-width: 0;
	}
	#primary, #secondary {
		--ytd-margin-6x: var(--body-pad);

		&-inner {
			bg(2);
			pad();
			brd();
		}
	}
	ytd-watch-flexy[theater] #primary {
		margin-top: var(--body-pad);
	}
	yt-formatted-string {
		lnh();
	}

	// Remove elements
	ytd-feed-filter-chip-bar-renderer, yt-related-chip-cloud-renderer,
	ytd-compact-playlist-renderer[custom-thumbnail-size], // Mix
	#menu-container.ytd-video-primary-info-renderer,
	#menu.ytd-compact-video-renderer,
	#metadata-line > :first-child, // View count
	ytd-badge-supported-renderer,
	[aria-label="Sort comments"],
	.super-title, #super-title, // Hashtags
	ytd-mini-guide-renderer,
	#voice-search-button,
	#subscribe-button,
	#sponsor-button,
	#country-code,
	#left-arrow,
	#guide {
		display: none !important;
	}
	#page-manager {
		margin-left: 0 !important;
	}

	// Remove dropdowns/menus
	#menu,
	#action-menu,
	#guide-button.ytd-masthead {
		display: none !important;
	}
	#menu.ytd-video-primary-info-renderer {
		display: block !important;
	}
	.metadata.ytd-compact-video-renderer,
	h3.ytd-rich-grid-media {
		padding-right: 0 !important;
	}
	h3.ytd-grid-video-renderer {
		margin: 0 !important;
	}

	// Remove video preview
	#preview, #hover-overlays {
		display: none !important;
	}
	ytd-thumbnail-overlay-time-status-renderer {
		display: inline-block !important;
	}

	// Header
	.ytd-masthead {
		#container& {
			--yt-spec-wordmark-text: var(--accent-fg);
			bg(2);
			header-focus();
			padding: 0 var(--pad);
			brd(bottom);
			height: var(--header-h);
		}
		ytd-searchbox& {
			--bg2: var(--bg);
			pad(0);
			mar(0);
		}
	}
	#container.ytd-searchbox {
		all: unset;
		height: max-content;
	}
	#search {
		&-input input {
			normalise-input();
			width: 100%;
		}
		&-icon {
			display: none $i;

			&-legacy.ytd-searchbox {
				normalise-button();
				padding: 0 var(--pad) $i;
				box(unset);
			}
		}
	}
	yt-icon.ytd-logo {
		pad(0);
	}
	#page-manager {
		margin-top: var(--header-h) $i;
	}

	// Front page
	ytd-rich-item-renderer{
		--ytd-rich-grid-item-margin: calc(var(--pad) * 2);
		mar(bottom);
	}
	#contents.ytd-rich-grid-renderer {
		margin: var(--body-pad);
		width: unset
	}
	ytd-rich-grid-media {
		brd();

		#avatar-link.& {
			display: none;
		}
		#details.& {
			bg(2);
			pad();
			brd(top);
		}
		#meta.& {
			pad(0);
		}
		h3.& {
			mar(0);
		}
		#byline-container {
			max-width: calc(100% - 13ch) $i;
		}
	}
	ytd-video-meta-block {
		#metadata.& {
			flex-direction: row $i;
			justify-content: space-between
		}
		#metadata-line.& {
			lnh();
		}
	}

	// Left side
	ytd-video-primary-info-renderer {
		pad(0);
		pad(top);
		border: none $i;

		/#title.ytd-comments-header-renderer,
		#container.& {
			normalise-header();
			display: flex;
			justify-content: space-between;
			align-items: flex-start;
		}
		.title.&,
		/.count-text.ytd-comments-header-renderer,
		#info-text.&, #info-text.& > *, #info-text.& > * > * {
			line-height: var(--line-height) $i;
		}
	}
	ytd-video-secondary-info-renderer {
		pad(0);
		border: none;
		margin-bottom: calc(var(--pad) * 2);
	}

	// Right side
	ytd-compact-video-renderer.ytd-item-section-renderer {
		bg();
		brd();
		mar(0);
		mar(bottom);

		ytd-thumbnail {
			mar(0);
			width: calc(var(--thumbnail-size) - var(--border-width) * 4) $i;
		}
		img.yt-img-shadow {
			mar(0);
			width: 100%;
		}
		.details {
			pad();
			brd(thumbnail-info-hover ? bottom : top);
			box(calc(100% - var(--pad) * 2), 100%);
		}
		if (thumbnail-info-hover) {
			.details {
				position: absolute;
				bg(-tr);
				dropfade();
			}
			&:not(:hover) .details {
				display: none;
			}
		}
		#metadata {
			flex-direction: row $i;
			justify-content: space-between;
		}
		#video-title,
		#metadata-line,
		#byline-container {
			line-height: var(--line-height) $i;
			mar(0);
		}
	}
	#dismissible.ytd-compact-video-renderer {
		flex-direction: column;
	}
	ytd-thumbnail-overlay-time-status-renderer {
		left: var(--pad);
		top: var(--pad);
		right: unset;
		bottom: unset
		bgc(-tr);
		letter-spacing: 0;
		line-height: var(--line-height) $i;
		padding: calc(var(--pad) / 2);
		brd();
		mar(0);
		height: unset;
	}
}
